# best fitted model, but needs about 50000 iterations with 25000 burn-in and thin=5
    model {
      for (i in 1:N) {
        body_weight[i] ~ dt(body.mu[i], body.tau, 3)
        body.mu[i] <- beta.breed*breed[i] + beta.age*age[i] + b[id[i],1] + b[id[i],2]*age[i]
      }

      for (i in 1:M) {
        b[i, 1:2] ~ dmnorm(b_mean[1:2], b.tau[1:2,1:2])
      }

      # error SD
      body.tau ~ dgamma(0.00001,0.00001)
      body.sigma <- 1 / sqrt(body.tau)

      # fixed effects
      beta.breed ~ dt(0, 1.0E-6, 3)
      beta.age ~ dt(0, 1.0E-6, 3)

      # random effects
      b.tau ~ dwish(b_R[1:2,1:2], 2)
      b.sigma2[1:2,1:2]  <- inverse(b.tau[1:2,1:2])
      for (i in 1:2) {
        b.sigma[i] <- sqrt(b.sigma2[i,i])
      }
      b.corr <- b.sigma2[1,2]/(b.sigma[1]*b.sigma[2])

      error <- mean(body_weight - body.mu)
      b.intercept.means <- mean(b[,1])
      b.slope.means <- mean(b[,2])
  
    }
